#!/usr/bin/env ruby

require 'gli'
require 'passman'

module Passman
  module App
    extend GLI::App

    program_desc 'Describe your application here'

    version Passman::VERSION

    flag [:'database-directory']
    flag [:'database-default']

    Passman::Commands.each do |cmd|
      desc cmd.desc
      arg_name cmd.arg_name
      command cmd.name do |c|
        c.action &cmd.method(:invoke)
      end
    end

    desc 'Create a new password record'
    command :new do |c|
      c.action do |global_options,options,args|
        attrs = Hash[ args.map { |a| a.split(/=/) } ]
        secret = Secret.new(attrs)

        @db.add secret
        @db.write
      end
    end

    desc 'Dump all password records to stdout'
    command :'dump-all' do |c|
      c.action do |global_options, options, args|
        puts global_options.inspect

        puts "Found #{@db.count} record(s) in database '#{@db.path}'"
        @db.secrets.each do |secret|
          puts

          [:identifier, :category, :secret, :metadata].each do |field|
            value = secret.send field
            puts "#{field}: #{value}"
          end
        end
      end
    end

    pre do |global,command,options,args|
      @config = Config.new(global)

      @db = Database.new(@config['database'])
      @db.read if @db.exists?
      global[:config] = @config
      global[:database] = @db

      true
    end

    on_error do |exception|
      true
    end
  end
end

exit Passman::App.run(ARGV)
